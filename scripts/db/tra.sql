-- MySQL Script generated by MySQL Workbench
-- Sat May 19 20:05:59 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tra
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tra
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tra` DEFAULT CHARACTER SET utf8 ;
USE `tra` ;

-- -----------------------------------------------------
-- Table `tra`.`facebookUserAuth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`facebookUserAuth` ;

CREATE TABLE IF NOT EXISTS `tra`.`facebookUserAuth` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `accessToken` VARCHAR(255) NOT NULL,
  `facebookId` VARCHAR(255) NOT NULL,
  `expiresIn` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `facebook_id_UNIQUE` (`facebookId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`users` ;

CREATE TABLE IF NOT EXISTS `tra`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` BLOB NULL,
  `facebookAuthId` INT NULL,
  `profilePic` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `facebook_id_idx` (`facebookAuthId` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `facebook_auth_id_UNIQUE` (`facebookAuthId` ASC),
  CONSTRAINT `users_facebook_id`
    FOREIGN KEY (`facebookAuthId`)
    REFERENCES `tra`.`facebookUserAuth` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`counties`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`counties` ;

CREATE TABLE IF NOT EXISTS `tra`.`counties` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`cities` ;

CREATE TABLE IF NOT EXISTS `tra`.`cities` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `countyId` INT NULL,
  `cityData` JSON NULL,
  `googlePlaceId` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `google_place_id_UNIQUE` (`googlePlaceId` ASC),
  CONSTRAINT `city_county_foreign_key`
    FOREIGN KEY (`countyId`)
    REFERENCES `tra`.`counties` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`places`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`places` ;

CREATE TABLE IF NOT EXISTS `tra`.`places` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cityId` INT UNSIGNED NULL,
  `name` VARCHAR(255) NULL,
  `googlePlaceData` JSON NULL,
  `yelpPlaceData` JSON NULL,
  `googlePlaceId` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `place_city_id_idx` (`cityId` ASC),
  UNIQUE INDEX `name_UNIQUE` (`googlePlaceId` ASC),
  CONSTRAINT `place_city_id`
    FOREIGN KEY (`cityId`)
    REFERENCES `tra`.`cities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`recommendations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`recommendations` ;

CREATE TABLE IF NOT EXISTS `tra`.`recommendations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `placeId` INT NULL,
  `userId` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `recommendations_places_id_idx` (`placeId` ASC),
  INDEX `recommendations_user_id_idx` (`userId` ASC),
  UNIQUE INDEX `rec_composite_key` (`placeId` ASC, `userId` ASC),
  CONSTRAINT `recommendations_places_id`
    FOREIGN KEY (`placeId`)
    REFERENCES `tra`.`places` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `recommendations_user_id`
    FOREIGN KEY (`userId`)
    REFERENCES `tra`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tra`.`friends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tra`.`friends` ;

CREATE TABLE IF NOT EXISTS `tra`.`friends` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `friendId` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `friend` (`userId` ASC, `friendId` ASC),
  INDEX `friends_friend_id_idx` (`friendId` ASC),
  CONSTRAINT `friends_user_id`
    FOREIGN KEY (`userId`)
    REFERENCES `tra`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `friends_friend_id`
    FOREIGN KEY (`friendId`)
    REFERENCES `tra`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
